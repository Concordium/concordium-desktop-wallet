$spacings: (0, 5, 10, 20, 30, 40, 50, 100);
$sides: (top, bottom, left, right);

/*
Generates spacing utility classes based on tuples above:

m0 = margin: 0;
p0 = padding: 0;

mB10 = margin-bottom: 10px;
pT10 = padding-top: 10px;

mV30 = margin-top: 30px; margin-bottom: 30px;
pH50 = padding-left: 50px; padding-right: 50px;
*/
@each $space in $spacings {
    .m#{$space} {
        margin: #{$space}px;
    }
    .p#{$space} {
        padding: #{$space}px;
    }
}

@each $space in $spacings {
    .mV#{$space} {
        margin-top: #{$space}px;
        margin-bottom: #{$space}px;
    }
    .pV#{$space} {
        padding-top: #{$space}px;
        padding-bottom: #{$space}px;
    }
    .mH#{$space} {
        margin-left: #{$space}px;
        margin-right: #{$space}px;
    }
    .pH#{$space} {
        padding-left: #{$space}px;
        padding-right: #{$space}px;
    }
}

@each $space in $spacings {
    @each $side in $sides {
        .m#{to-upper-case(str-slice($side, 0, 1))}#{$space} {
            @include withFirstLastMods() {
                margin-#{$side}: #{$space}px;
            }
        }
        .p#{to-upper-case(str-slice($side, 0, 1))}#{$space} {
            @include withFirstLastMods() {
                padding-#{$side}: #{$space}px;
            }
        }
    }
}

.mBauto {
    margin-bottom: auto;
}

.relative {
    position: relative;
}

.block {
    display: block;
}

.marginCenter {
    margin-left: auto;
    margin-right: auto;
}

.displayContents {
    display: contents;
}

.height100 {
    height: 100%;
}

.minHeight100 {
    min-height: 100%;
}

.width100 {
    width: 100%;
}
